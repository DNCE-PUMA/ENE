package gob.inei.ene2019v2.fragment.ModVIII;

import gob.inei.dnce.annotations.FieldAnnotation;
import gob.inei.dnce.components.CheckBoxField;
import gob.inei.dnce.components.Entity;
import gob.inei.dnce.components.FragmentForm;
import gob.inei.dnce.components.GridComponent2;
import gob.inei.dnce.components.LabelComponent;
import gob.inei.dnce.components.MasterActivity;
import gob.inei.dnce.components.RadioGroupOtherField;
import gob.inei.dnce.components.RadioGroupOtherField.ORIENTATION;
import gob.inei.dnce.components.ToastMessage;
import gob.inei.dnce.util.Filtros;
import gob.inei.dnce.util.Util;
import gob.inei.ene2019v2.R;
import gob.inei.ene2019v2.common.App;
import gob.inei.ene2019v2.model.Moduloviii;
import gob.inei.ene2019v2.service.CuestionarioService;

import java.sql.SQLException;

import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ScrollView;

public class Mod_VIII_Fragment_007 extends FragmentForm {

	@FieldAnnotation(orderIndex = 1)
	public RadioGroupOtherField rgC8P822;
	@FieldAnnotation(orderIndex = 2)
	public CheckBoxField chbC8P822_1;
	@FieldAnnotation(orderIndex = 3)
	public RadioGroupOtherField rgC8P823;
	@FieldAnnotation(orderIndex = 4)
	public CheckBoxField chbC8P823_1;
	@FieldAnnotation(orderIndex = 5)
	public RadioGroupOtherField rgC8P824;
	@FieldAnnotation(orderIndex = 6)
	public CheckBoxField chbC8P824_1;
	@FieldAnnotation(orderIndex = 7)
	public CheckBoxField chbC8P824_2;

	private CuestionarioService cuestionarioService;
	private Moduloviii bean;
	public GridComponent2 gridpreg822,gridpreg823,gridpreg824;
	private LabelComponent lblTitulo, lblSubTitulo;
	LinearLayout q0, q1, q2, q3;

	public Mod_VIII_Fragment_007() {
	}

	public Mod_VIII_Fragment_007 parent(MasterActivity parent) {
		this.parent = parent;
		return this;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		rootView = createUI();
		initObjectsWithoutXML(this, rootView);
		enlazarCajas();
		listening();

		return rootView;
	}

	@Override
	protected void buildFields() {
		lblTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
				.text(R.string.c2c100m8).textSize(21).centrar().negrita();
		lblSubTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(MATCH_PARENT, MATCH_PARENT).text(R.string.c1c100m6p_81)
				.textSize(21).centrar().negrita();

		rgC8P822 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p002_1, R.string.c2c100m8p002_2,
				R.string.c2c100m8p002_3, R.string.c2c100m8p002_4,
				R.string.c2c100m8p002_5, R.string.c2c100m8p002_6,
				R.string.c2c100m8p002_7).size(WRAP_CONTENT, 280).orientation(
				ORIENTATION.HORIZONTAL);
		
		chbC8P822_1 = new CheckBoxField(this.getActivity(),
				R.string.c2c100m8p002_8, "1:0").size(WRAP_CONTENT, 600).callback("OnChangeCheckP822");
		
		gridpreg822 = new GridComponent2(this.getActivity(),Gravity.CENTER_VERTICAL, 1);
		gridpreg822.addComponent(rgC8P822);
		gridpreg822.addComponent(chbC8P822_1);
		gridpreg822.colorFondo(R.color.WhiteSmoke);
				
		
		rgC8P823 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p002_1, R.string.c2c100m8p002_2,
				R.string.c2c100m8p002_3, R.string.c2c100m8p002_4,
				R.string.c2c100m8p002_5, R.string.c2c100m8p002_6,
				R.string.c2c100m8p002_7).size(WRAP_CONTENT, 280).orientation(
				ORIENTATION.HORIZONTAL);
		
		chbC8P823_1 = new CheckBoxField(this.getActivity(),
				R.string.c2c100m8p002_8, "1:0").size(WRAP_CONTENT, 600).callback("OnChangeCheckP823");
		
		gridpreg823 = new GridComponent2(this.getActivity(),Gravity.CENTER_VERTICAL, 1);
		gridpreg823.addComponent(rgC8P823);
		gridpreg823.addComponent(chbC8P823_1);
		gridpreg823.colorFondo(R.color.WhiteSmoke);
		
		
		rgC8P824 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p002_1, R.string.c2c100m8p002_2,
				R.string.c2c100m8p002_3, R.string.c2c100m8p002_4,
				R.string.c2c100m8p002_5, R.string.c2c100m8p002_6,
				R.string.c2c100m8p002_7).size(
				WRAP_CONTENT, 280).orientation(ORIENTATION.HORIZONTAL).callback("OnChangeCheckP824");
		
		chbC8P824_1 = new CheckBoxField(this.getActivity(),
				R.string.c2c100m8p002_10, "1:0").size(WRAP_CONTENT, 600).callback("OnChangeCheckP824_1");
		chbC8P824_2 = new CheckBoxField(this.getActivity(),
				R.string.c2c100m8p002_11, "1:0").size(WRAP_CONTENT, 600).callback("OnChangeCheckP824_1");
		
		gridpreg824 = new GridComponent2(this.getActivity(),Gravity.CENTER_VERTICAL, 1);
		gridpreg824.addComponent(rgC8P824);
		gridpreg824.addComponent(chbC8P824_1);
		gridpreg824.addComponent(chbC8P824_2);
		gridpreg824.colorFondo(R.color.WhiteSmoke);
	}

	@Override
	protected View createUI() {
		buildFields();

		q0 = createQuestionSection(lblTitulo, lblSubTitulo);
		q1 = createQuestionSection(R.string.c2c100m8p020, Gravity.CENTER, LinearLayout.HORIZONTAL, gridpreg822.component());
		q2 = createQuestionSection(R.string.c2c100m8p021, Gravity.CENTER, LinearLayout.HORIZONTAL, gridpreg823.component());
		q3 = createQuestionSection(R.string.c2c100m8p022, Gravity.CENTER, LinearLayout.HORIZONTAL, gridpreg824.component());

		ScrollView contenedor = createForm();
		LinearLayout form = (LinearLayout) contenedor.getChildAt(0);

		form.addView(q0);
		form.addView(q1);
		form.addView(q2);
		form.addView(q3);

		return contenedor;
	}

	@Override
	public boolean grabar() {

		if (!validar()) {
			if (error) {
				if (!mensaje.equals("")) {
					ToastMessage.msgBox(this.getActivity(), mensaje,
							ToastMessage.MESSAGE_ERROR,
							ToastMessage.DURATION_LONG);
				}
				if (view != null) {
					view.requestFocus();
				}
			}
			return false;
		}
		uiToEntity(bean);
		try {
			if (!getCuestionarioService().saveOrUpdate(bean,
					bean.getSecCap(getListFields(this)))) {
				ToastMessage.msgBox(this.getActivity(),
						"Los datos no se guardaron",
						ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
			}
		} catch (SQLException e) {
			ToastMessage.msgBox(this.getActivity(), e.getMessage(),
					ToastMessage.MESSAGE_INFO, ToastMessage.DURATION_LONG);
			return false;
		}

		return true;
	}

	private boolean validar() {
		String pregunta_no_vacia = getString(R.string.pregunta_no_vacia);
		String especifique_no_vacio = getString(R.string.pregunta_especifique);
		error = false;

		if (Filtros.getErrorFiltro() != null) {
			ToastMessage.msgBox(getActivity(), Filtros.getErrorFiltro()
					.getValue(), ToastMessage.MESSAGE_ERROR,
					ToastMessage.DURATION_LONG);
			Filtros.getErrorFiltro().getKey().requestFocus();
			return false;
		}

		if (Util.esVacio(rgC8P822)) {
			if (!chbC8P822_1.isChecked()) {
				mensaje = pregunta_no_vacia.replace("$", "La pregunta P822");
				view = rgC8P822;
				error = true;
				return false;
			}
		}

		if (Util.esVacio(rgC8P823)) {
			if (!chbC8P823_1.isChecked()) {
				mensaje = pregunta_no_vacia.replace("$", "La pregunta P823");
				view = rgC8P823;
				error = true;
				return false;
			}
		}

		if (Util.esVacio(rgC8P824)) {
			if (!(chbC8P824_1.isChecked() || chbC8P824_2.isChecked())) {
				mensaje = pregunta_no_vacia.replace("$", "La pregunta P824");
				view = rgC8P824;
				error = true;
				return false;
			}
		}

		return true;
	}


	@Override
	public void cargarDatos() {
		bean = getCuestionarioService().getModuloviii(
				App.getInstance().getEmpresa(),
				new Moduloviii().getSecCap(getListFields(this)));
		if (bean == null) {
			bean = new Moduloviii();
			bean.id = App.getInstance().getEmpresa().id;
		}

		entityToUI(bean);

		inicio();

	}

	private void inicio() {
		
		OnChangeCheckP822();
		OnChangeCheckP823();
		OnChangeCheckP824();
		OnChangeCheckP824_1();
//		OnChangeCheckP824_2();
		rgC8P822.requestFocus();
	}

	public CuestionarioService getCuestionarioService() {
		if (cuestionarioService == null) {
			cuestionarioService = CuestionarioService
					.getInstance(getActivity());
		}
		return cuestionarioService; 
	}
	
	public void OnChangeCheckP822(){
		if (chbC8P822_1.isChecked()) {
			Util.cleanAndLockView(getActivity(), rgC8P822);
			rgC8P823.requestFocus();
		} else {
			Util.lockView(getActivity(), false, rgC8P822);
			rgC8P822.requestFocus();
		}
	}
	public void OnChangeCheckP823(){
		if (chbC8P823_1.isChecked()) {
			Util.cleanAndLockView(getActivity(), rgC8P823);
			rgC8P824.requestFocus();
		} else {
			Util.lockView(getActivity(), false, rgC8P823);
			rgC8P823.requestFocus();
		}
	}
	public void OnChangeCheckP824(){
		if (!Util.esVacio(rgC8P824)) {
			chbC8P824_1.setChecked(false);
			chbC8P824_2.setChecked(false);
		}		
	}
	
	public void OnChangeCheckP824_1(){
		if (chbC8P824_1.isChecked()) {
			Util.cleanAndLockView(getActivity(), rgC8P824);
			chbC8P824_2.setChecked(false);
		}else{
			if (chbC8P824_2.isChecked()) {
				Util.cleanAndLockView(getActivity(), rgC8P824);
				chbC8P824_1.setChecked(false);
			}else{
				Util.lockView(getActivity(), false, rgC8P824);
				rgC8P824.requestFocus();
			}
		}
	}
		
		
		
//	public void OnChangeCheckP824_1(){
//		if (chbC8P824_1.isChecked()) {
//			Util.cleanAndLockView(getActivity(), rgC8P824);
//			chbC8P824_2.setChecked(false);
//		} else {
//			Util.lockView(getActivity(), false, rgC8P824);
//			rgC8P824.requestFocus();
//		}
//	}
//	public void OnChangeCheckP824_2(){
//		if (chbC8P824_2.isChecked()) {
//			Util.cleanAndLockView(getActivity(), rgC8P824);
//			chbC8P824_1.setChecked(false);
//		} else {
//			Util.lockView(getActivity(), false, rgC8P824);
//			rgC8P824.requestFocus();
//		}
//	}
	
	@Override
	public Entity getEntity() {
		return bean;
	}
}
