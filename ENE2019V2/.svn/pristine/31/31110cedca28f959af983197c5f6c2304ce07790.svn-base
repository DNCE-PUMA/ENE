package gob.inei.ene2019v2.fragment.ModIV;

import gob.inei.dnce.components.Entity;
import gob.inei.dnce.components.Entity.SeccionCapitulo;
import gob.inei.dnce.components.FragmentForm;
import gob.inei.dnce.components.GridComponent;
import gob.inei.dnce.components.GridComponent2;
import gob.inei.dnce.components.LabelComponent;
import gob.inei.dnce.components.MasterActivity;
import gob.inei.dnce.components.RadioGroupOtherField;
import gob.inei.dnce.components.TableComponent;
import gob.inei.dnce.components.ToastMessage;
import gob.inei.dnce.interfaces.IDetailEntityComponent;
import gob.inei.dnce.util.Filtros;
import gob.inei.dnce.util.Util;
import gob.inei.ene2019v2.R;
import gob.inei.ene2019v2.common.App;
import gob.inei.ene2019v2.fragment.ModIV.Dialog.Mod_IV_Fragment_02_01;
import gob.inei.ene2019v2.model.Caratula;
import gob.inei.ene2019v2.model.Moduloiv01;
import gob.inei.ene2019v2.service.CuestionarioService;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ScrollView;

public class Mod_IV_Fragment_002 extends FragmentForm {

	public TableComponent tcM4P76;

	private CuestionarioService cuestionarioService;
	private Moduloiv01 bean;
	SeccionCapitulo[] campos;
	private GridComponent2 grdCap01;
	private LabelComponent lblgrid1, lblgrid2, lblgrid3,lblgrid4, lblgrid5, lblgrid6,lblgrid7, lblgrid8,lblgridn,lblgridi;
	private LabelComponent lblTitulo, lblSubTitulo, lblM4P004, lblM4P005;
	private GridComponent grEspe01, gridM4P004, gridM4P005;
	LinearLayout q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10;
	private List<P3Det> detalles;
	P3_1ClickListener adapter;
	private int cont;
	public Mod_IV_Fragment_002() {
	}

	public Mod_IV_Fragment_002 parent(MasterActivity parent) {
		this.parent = parent;
		return this;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}


	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		rootView = createUI();
		initObjectsWithoutXML(this, rootView);
		enlazarCajas();
		listening();
		adapter = new P3_1ClickListener();
		tcM4P76.getListView().setOnItemClickListener(adapter);
		campos = new SeccionCapitulo[] { new SeccionCapitulo(1, 1, 1, "ID",
				"C4P404A_1", "C4P404B_1", "C4P404C_1", "C4P404D_1",
				"C4P404E_1", "C4P404F_1", "C4P404G_1", "C4P404G_1ESP",
				"C4P404A_2", "C4P404B_2", "C4P404C_2", "C4P404D_2",
				"C4P404E_2", "C4P404F_2", "C4P404G_2", "C4P404G_2ESP") };
		
		return rootView;
	}

	@Override
	protected void buildFields() {
		lblTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
				.text(R.string.c1c100m400p).textSize(21).centrar().negrita();
		lblSubTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(MATCH_PARENT, MATCH_PARENT).text(R.string.c1c100m4p_1)
				.textSize(20).centrar().negrita();
		
		lblgridn = new LabelComponent(this.getActivity(),
				App.ESTILO).size(310, 160)
				.text(R.string.c1c100m4p404_n).textSize(16).centrar()
				.negrita();	
	
		
		tcM4P76 = new TableComponent(getActivity(), this, App.ESTILO).size(230,
				700).dataColumHeight(70);

		tcM4P76.addHeader(R.string.c1c100m4p404_a, 5f,	TableComponent.ALIGN.LEFT);
		tcM4P76.addHeader(R.string.m_select, 3.1f, RadioGroupOtherField.class,R.string.si, R.string.no);
		tcM4P76.addCallback(1, "FuncionTC");
		tcM4P76.setHeaderHeight(70);
	}
	@Override
	protected View createUI() {
		buildFields();

		q0 = createQuestionSection(lblTitulo, lblSubTitulo);
		q1 = createQuestionSection(R.string.c1c100m4p404, tcM4P76.getTableView());
		ScrollView contenedor = createForm();
		LinearLayout form = (LinearLayout) contenedor.getChildAt(0);

		form.addView(q0);
		form.addView(q1);

		return contenedor;
	}

	@Override
	public boolean grabar() {

		if (!validar()) {
			if (error) {
				if (!mensaje.equals("")) {
					ToastMessage.msgBox(this.getActivity(), mensaje,
							ToastMessage.MESSAGE_ERROR,
							ToastMessage.DURATION_LONG);
				}
				if (view != null) {
					view.requestFocus();
				}
			}
			return false;
		}
		
		uiToEntity(bean);
		llenarBean();
		String[] extras = null;

		extras = new String[] { "C4P409", "C4P409_ESP", "C4P415", "C4P415A",
				"C4P415B_1", "C4P415B_2", "C4P415B_3", "C4P415B_4",
				"C4P415B_5", "C4P415B_6", "C4P415B_7", "C4P415B_7ESP"};		

		
		try {
		
			if (Util.getInt(bean.c4p404a_2) == 2 ) {			
				if (!getCuestionarioService()
						.saveOrUpdate(bean, getSecCap2(extras))) {
					ToastMessage.msgBox(this.getActivity(),
							"Los datos no se guardaron X",
							ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
				}
				
			//	bean2.c3p315_1 = bean2.c3p315_2 = bean2.c3p315_3 =bean2.c3p315_4 = bean2.c3p315_5 = bean2.c3p316 = bean2.c3p319 = null;
			//	bean2.c3p316_esp = bean2.c3p319_esp = null;
				if (!getCuestionarioService()
						.saveOrUpdate(bean, getSecCap2( false, extras))) {
					ToastMessage.msgBox(this.getActivity(),
							"Los datos no se guardaron Y",
							ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
				}
			}
			
			if (!getCuestionarioService().saveOrUpdate(bean, campos)) {
				ToastMessage.msgBox(this.getActivity(),
						"Los datos no se guardaron U",
						ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
			}
			
		} catch (SQLException e) {
			ToastMessage.msgBox(this.getActivity(), e.getMessage(),
					ToastMessage.MESSAGE_INFO, ToastMessage.DURATION_LONG);
			return false;
		}

		return true;
	}

	private boolean validar() {
		// String pregunta_no_vacia = getString(R.string.pregunta_no_vacia);
		String especifique_no_vacio = getString(R.string.pregunta_especifique);
		// error = false;
		if (Filtros.getErrorFiltro() != null) {
			ToastMessage.msgBox(getActivity(), Filtros.getErrorFiltro()
					.getValue(), ToastMessage.MESSAGE_ERROR,
					ToastMessage.DURATION_LONG);
			Filtros.getErrorFiltro().getKey().requestFocus();
			return false;
		}
		String preguntaVacia = this.getResources().getString(R.string.pregunta_no_vacia);
		String pregunta_no_vacia = getString(R.string.pregunta_no_vacia);

		for (int i = 0; i < detalles.size(); i++) {
			if (Util.esVacio(detalles.get(i).c4p404a)) {
				ToastMessage.msgBox(this.getActivity(),
						pregunta_no_vacia.replace("$", "Pregunta " + "“ "	+ detalles.get(i).label + " ”"),
						ToastMessage.MESSAGE_INFO, ToastMessage.DURATION_LONG);
				error = true;
				return false;
			}

			if (!Util.esDiferente(detalles.get(i).c4p404a, 1)) {
				if (Util.esVacio(detalles.get(i).c4p404b)) {
					ToastMessage.msgBox(this.getActivity(),
							pregunta_no_vacia.replace("$", "Pregunta " + "“ "+ detalles.get(i).label + " ”"),
							ToastMessage.MESSAGE_INFO,
							ToastMessage.DURATION_LONG);
					error = true;
					return false;
				}
			}
		}

		return true;
	}                                 
	@Override
	public void cargarDatos() {
		
		bean = getCuestionarioService().getModuloiv01(
				App.getInstance().getEmpresa(), campos);
				
		if (bean == null) {
			bean = new Moduloiv01();
			bean.id = App.getInstance().getEmpresa().id;
		}

		detalles = new ArrayList<P3Det>();
		for (cont = 0; cont < 2; cont++) {
			detalles.add(new P3Det(getResources().getStringArray(
					R.array.ModIV_detalleP404)[cont]));
		}
		
		llenarUI();
		entityToUI(bean);
		refrescarTabla();
		inicio();
	}	
	private void inicio() {
	
	}

	public CuestionarioService getCuestionarioService() {
		if (cuestionarioService == null) {
			cuestionarioService = CuestionarioService
					.getInstance(getActivity());
		}
		return cuestionarioService;
	}

	@Override
	public Caratula getEntity() {
		return App.getInstance().getEmpresa();
	}
	/******FLUJOS NACIONALES*****/
//	        Si C4P404A_1 = 1  Pase a C4P404B_1 
//			Si C4P404A_1 = 2  Pase a C4P404A_2
//	        Si C4P404A_2 = 1  Pase a C4P404B_2
//	        Si C4P404A_2 = 2  Pase a C4P417
	
	
	

	public static class P3Det extends Entity implements IDetailEntityComponent {
		public String label = null;
		public Integer c4p404a = null;
		public Integer c4p404b = null;
		public Integer c4p404c = null;
		public Integer c4p404d = null;
		public Integer c4p404e = null;
		public Integer c4p404f = null;
		public Integer c4p404g = null;
		public String c4p404g_esp = null;

		public P3Det(String label) {
			super();
			this.label = label;
		}

		@Override
		public void cleanEntity() {
			c4p404a = null;
			c4p404b = null;
			c4p404c = null;
			c4p404d = null;
			c4p404e = null;
			c4p404f = null;
			c4p404g = null;
			c4p404g_esp = null;
		}

		@Override
		public boolean isTitle() {
			// TODO Auto-generated method stub
			return false;
		}
	}
	

	
	private class P3_1ClickListener implements OnItemClickListener {
		public P3_1ClickListener() {
		}

		@Override
		public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
				long arg3) {
			P3Det c = (P3Det) detalles.get(arg2);

			Log.e("arg2::", String.valueOf(arg2));

			if (Util.esDiferente(c.c4p404a, 1)) {
				return;
			}
			abrirDetalle(arg2);
		}
	}


	private void llenarUI() {
		detalles = new ArrayList<Mod_IV_Fragment_002.P3Det>();
		P3Det tmp = new P3Det(getResources().getStringArray(
				R.array.ModIV_detalleP404)[0]);

		tmp.c4p404a = bean.c4p404a_1;
		tmp.c4p404b = bean.c4p404b_1;
		tmp.c4p404c = bean.c4p404c_1;
		tmp.c4p404d = bean.c4p404d_1;
		tmp.c4p404e = bean.c4p404e_1;
		tmp.c4p404f = bean.c4p404f_1;
		tmp.c4p404g = bean.c4p404g_1;
		tmp.c4p404g_esp = bean.c4p404g_1esp;
		detalles.add(tmp);

		tmp = new P3Det(
				getResources().getStringArray(R.array.ModIV_detalleP404)[1]);

		tmp.c4p404a = bean.c4p404a_2;
		tmp.c4p404b = bean.c4p404b_2;
		tmp.c4p404c = bean.c4p404c_2;
		tmp.c4p404d = bean.c4p404d_2;
		tmp.c4p404e = bean.c4p404e_2;
		tmp.c4p404f = bean.c4p404f_2;
		tmp.c4p404g = bean.c4p404g_2;
		tmp.c4p404g_esp = bean.c4p404g_2esp;
		detalles.add(tmp);


	}

	private void llenarBean() {
		P3Det tmpP1;

		tmpP1 = (P3Det) detalles.get(0);
		bean.c4p404a_1 = tmpP1.c4p404a;
		bean.c4p404b_1 = tmpP1.c4p404b;
		bean.c4p404c_1 = tmpP1.c4p404c;
		bean.c4p404d_1 = tmpP1.c4p404d;
		bean.c4p404e_1 = tmpP1.c4p404e;
		bean.c4p404f_1 = tmpP1.c4p404f;
		bean.c4p404g_1 = tmpP1.c4p404g;
		bean.c4p404g_1esp = tmpP1.c4p404g_esp;

		tmpP1 = (P3Det) detalles.get(1);
		bean.c4p404a_2 = tmpP1.c4p404a;
		bean.c4p404b_2 = tmpP1.c4p404b;
		bean.c4p404c_2 = tmpP1.c4p404c;
		bean.c4p404d_2 = tmpP1.c4p404d;
		bean.c4p404e_2 = tmpP1.c4p404e;
		bean.c4p404f_2 = tmpP1.c4p404f;
		bean.c4p404g_2 = tmpP1.c4p404g;
		bean.c4p404g_2esp = tmpP1.c4p404g_esp;

	}
	
	public void refrescarTabla() {
		tcM4P76.setData(detalles, "label" , "c4p404a");
		for (int row = 0; row < detalles.size(); row++) {
			setBorder();
		}
	}
	
	private void setBorder() {
		for (int x = 0; x < detalles.size(); x++) {
			P3Det cc = detalles.get(x);
			// if (!Util.esDiferente(detalles.orden, 1, 2, 5, 8, 9, 10)) {
			if (!Util.esDiferente(detalles.get(x).c4p404a, 1)
					&& !Util.esVacio(detalles.get(x).c4p404b)) {
				tcM4P76.setBorderRow(x);
			} else if (!Util.esDiferente(detalles.get(x).c4p404a,	2)) {
				tcM4P76.setBorderRow(x);
			} else {
				tcM4P76.setBorderRow(x, false);
			}
		}
	}

	
	public void abrirDetalle(int index) {
		FragmentManager fm = Mod_IV_Fragment_002.this.getFragmentManager();
		Mod_IV_Fragment_02_01 aperturaDialog = Mod_IV_Fragment_02_01
				.newInstance(Mod_IV_Fragment_002.this,
						(P3Det) detalles.get(index), detalles, index);
		aperturaDialog.show(fm, "aperturaDialog");
	}	
	
	public void LimpiarTCP476() {
		for (int row = 0; row < detalles.size(); row++) {
			// detalles.get(row).m4p076 = 0;
			detalles.get(row).cleanEntity();
		}
		refrescarTabla();
	}
	

	@SuppressLint("ResourceAsColor")
	public void FuncionTC(Object entity, Integer row, Integer opcion)
			throws SQLException {
		if (entity != null) {
			P3Det tmp = (P3Det) entity;
			tmp.c4p404a = opcion;
			if (Util.esDiferente(opcion, 1)) {
			//	dismissDialog(row);
				tmp.c4p404b = null;
				tmp.c4p404c = null;
				tmp.c4p404d = null;
				tmp.c4p404e = null;
				tmp.c4p404f = null;
				tmp.c4p404g = null;
				tmp.c4p404g_esp = null;
			}

			refrescarTabla();
		}
		

	}
	
}
