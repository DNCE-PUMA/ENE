package gob.inei.ene2019v2.fragment.ModVIII;

import gob.inei.dnce.annotations.FieldAnnotation;
import gob.inei.dnce.components.CheckBoxField;
import gob.inei.dnce.components.Entity;
import gob.inei.dnce.components.FragmentForm;
import gob.inei.dnce.components.GridComponent2;
import gob.inei.dnce.components.LabelComponent;
import gob.inei.dnce.components.MasterActivity;
import gob.inei.dnce.components.RadioGroupOtherField;
import gob.inei.dnce.components.RadioGroupOtherField.ORIENTATION;
import gob.inei.dnce.components.ToastMessage;
import gob.inei.dnce.util.Filtros;
import gob.inei.dnce.util.Util;
import gob.inei.ene2019v2.R;
import gob.inei.ene2019v2.common.App;
import gob.inei.ene2019v2.model.Moduloviii;
import gob.inei.ene2019v2.service.CuestionarioService;

import java.sql.SQLException;

import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ScrollView;

public class Mod_VIII_Fragment_016 extends FragmentForm {

	@FieldAnnotation(orderIndex = 1)
	public RadioGroupOtherField rgC8P842;
	@FieldAnnotation(orderIndex = 2)
	public CheckBoxField chbC8P842_1;
	@FieldAnnotation(orderIndex = 3)
	public RadioGroupOtherField rgC8P843;
	@FieldAnnotation(orderIndex = 4)
	public RadioGroupOtherField rgC8P844;
	@FieldAnnotation(orderIndex = 5)
	public CheckBoxField chbC8P844_1;
	@FieldAnnotation(orderIndex = 6)
	public RadioGroupOtherField rgC8P845;

	private CuestionarioService cuestionarioService;
	private Moduloviii bean;
	private LabelComponent lblTitulo, lblSubTitulo;
	public GridComponent2 gridpreg842,gridpreg844;
	LinearLayout q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10;

	public Mod_VIII_Fragment_016() {
	}

	public Mod_VIII_Fragment_016 parent(MasterActivity parent) {
		this.parent = parent;
		return this;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		rootView = createUI();
		initObjectsWithoutXML(this, rootView);
		enlazarCajas();
		listening();

		return rootView;
	}

	@Override
	protected void buildFields() {
		lblTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
				.text(R.string.c2c100m8).textSize(21).centrar().negrita();
		lblSubTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
				.text(R.string.c2c100m8_DCivil).textSize(20).centrar()
				.negrita();
		rgC8P842 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p002_1, R.string.c2c100m8p002_2,
				R.string.c2c100m8p002_3, R.string.c2c100m8p002_4,
				R.string.c2c100m8p002_5, R.string.c2c100m8p002_6,
				R.string.c2c100m8p002_7).size(WRAP_CONTENT, 450).orientation(
				ORIENTATION.HORIZONTAL);
		
		chbC8P842_1 = new CheckBoxField(this.getActivity(),
				R.string.c2c100m8p002_8, "1:0").size(WRAP_CONTENT, 600).callback("OnChangeCheckP842");
		
		gridpreg842 = new GridComponent2(this.getActivity(),Gravity.CENTER_VERTICAL, 1);
		gridpreg842.addComponent(rgC8P842);
		gridpreg842.addComponent(chbC8P842_1);
		gridpreg842.colorFondo(R.color.WhiteSmoke);
		
		rgC8P843 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p843_1, R.string.c2c100m8p843_2,
				R.string.c2c100m8p843_3).size(WRAP_CONTENT, 450)
				.orientation(ORIENTATION.HORIZONTAL).callback("FuncionRG843");
		rgC8P844 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p002_1, R.string.c2c100m8p002_2,
				R.string.c2c100m8p002_3, R.string.c2c100m8p002_4,
				R.string.c2c100m8p002_5, R.string.c2c100m8p002_6,
				R.string.c2c100m8p002_7).size(WRAP_CONTENT, 450).orientation(
				ORIENTATION.HORIZONTAL);
		
		chbC8P844_1 = new CheckBoxField(this.getActivity(),
				R.string.c2c100m8p002_8, "1:0").size(WRAP_CONTENT, 600).callback("OnChangeCheckP844");
		
		gridpreg844 = new GridComponent2(this.getActivity(),Gravity.CENTER_VERTICAL, 1);
		gridpreg844.addComponent(rgC8P844);
		gridpreg844.addComponent(chbC8P844_1);
		gridpreg844.colorFondo(R.color.WhiteSmoke);
		
		rgC8P845 = new RadioGroupOtherField(this.getActivity(),
				R.string.c2c100m8p845_1, R.string.c2c100m8p845_2,
				R.string.c2c100m8p845_3).size(WRAP_CONTENT, 450).orientation(
				ORIENTATION.HORIZONTAL);

	}

	@Override
	protected View createUI() {
		buildFields();

		q0 = createQuestionSection(lblTitulo, lblSubTitulo);
		q1 = createQuestionSection(R.string.c2c100m8p842, Gravity.CENTER, LinearLayout.HORIZONTAL, gridpreg842.component());
		q2 = createQuestionSection(R.string.c2c100m8p843, rgC8P843);
		q3 = createQuestionSection(R.string.c2c100m8p844, Gravity.CENTER, LinearLayout.HORIZONTAL, gridpreg844.component());
		q4 = createQuestionSection(R.string.c2c100m8p845, rgC8P845);

		ScrollView contenedor = createForm();
		LinearLayout form = (LinearLayout) contenedor.getChildAt(0);

		form.addView(q0);
		form.addView(q1);
		form.addView(q2);
		form.addView(q3);
		form.addView(q4);

		return contenedor;
	}

	@Override
	public boolean grabar() {

		if (!validar()) {
			if (error) {
				if (!mensaje.equals("")) {
					ToastMessage.msgBox(this.getActivity(), mensaje,
							ToastMessage.MESSAGE_ERROR,
							ToastMessage.DURATION_LONG);
				}
				if (view != null) {
					view.requestFocus();
				}
			}
			return false;
		}
		uiToEntity(bean);
		try {
			if (!getCuestionarioService().saveOrUpdate(bean,
					bean.getSecCap(getListFields(this)))) {
				ToastMessage.msgBox(this.getActivity(),
						"Los datos no se guardaron",
						ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
			}
		} catch (SQLException e) {
			ToastMessage.msgBox(this.getActivity(), e.getMessage(),
					ToastMessage.MESSAGE_INFO, ToastMessage.DURATION_LONG);
			return false;
		}

		return true;
	}

	private boolean validar() {
		String pregunta_no_vacia = getString(R.string.pregunta_no_vacia);
		error = false;

		if (Filtros.getErrorFiltro() != null) {
			ToastMessage.msgBox(getActivity(), Filtros.getErrorFiltro()
					.getValue(), ToastMessage.MESSAGE_ERROR,
					ToastMessage.DURATION_LONG);
			Filtros.getErrorFiltro().getKey().requestFocus();
			return false;
		}

		if (Util.getInt(bean.c8p839) == 1) {
			if (Util.esVacio(rgC8P842)) {
				if (!chbC8P842_1.isChecked()) {
					mensaje = pregunta_no_vacia.replace("$", "La pregunta P842");
					view = rgC8P842;
					error = true;
					return false;
				}
			}
		}
		if (Util.esVacio(rgC8P843)) {
			mensaje = pregunta_no_vacia.replace("$", "La pregunta P843");
			view = rgC8P843;
			error = true;
			return false;
		}
		if (rgC8P843.getTagSelected("").toString().equals("1")) {
			if (Util.esVacio(rgC8P844)) {
				if (!chbC8P844_1.isChecked()) {
					mensaje = pregunta_no_vacia.replace("$", "La pregunta P844");
					view = rgC8P844;
					error = true;
					return false;
				}
			}
		}

		if (Util.esVacio(rgC8P845)) {
			mensaje = pregunta_no_vacia.replace("$", "La pregunta P845");
			view = rgC8P845;
			error = true;
			return false;
		}

		return true;
	}

	@Override
	public void cargarDatos() {
		bean = getCuestionarioService().getModuloviii(
				App.getInstance().getEmpresa(),
				new Moduloviii().getSecCap(getListFields(this,
						new String[] { "C8P839" })));
		if (bean == null) {
			bean = new Moduloviii();
			bean.id = App.getInstance().getEmpresa().id;
		}

		entityToUI(bean);
		inicio();
	}

	private void inicio() {
		
		if (Util.getInt(bean.c8p839) == 1) {
			Util.lockView(getActivity(), false, rgC8P842,chbC8P842_1);
			OnChangeCheckP842();
			FuncionRG843();
			rgC8P842.requestFocus();
		} else {
			Util.cleanAndLockView(getActivity(), rgC8P842,chbC8P842_1);
			FuncionRG843();
			rgC8P843.requestFocus();
		}
		
		
	}

	public CuestionarioService getCuestionarioService() {
		if (cuestionarioService == null) {
			cuestionarioService = CuestionarioService
					.getInstance(getActivity());
		}
		return cuestionarioService;
	}

	@Override
	public Entity getEntity() {
		return bean;
	}

	public void FuncionRG843() {
		Integer valor = Integer.parseInt(rgC8P843.getTagSelected("0")
				.toString());
		if (valor != 1) {
			Util.cleanAndLockView(getActivity(), rgC8P844,chbC8P844_1);
			rgC8P845.requestFocus();
		} else {
			Util.lockView(getActivity(), false, rgC8P844,chbC8P844_1);
			OnChangeCheckP844();
			rgC8P844.requestFocus();
		}
	}
	
	public void OnChangeCheckP842(){
		if (chbC8P842_1.isChecked()) {
			Util.cleanAndLockView(getActivity(), rgC8P842);
		} else {
			Util.lockView(getActivity(), false, rgC8P842);
			rgC8P842.requestFocus();
		}
	}
	public void OnChangeCheckP844(){
		if (chbC8P844_1.isChecked()) {
			Util.cleanAndLockView(getActivity(), rgC8P844);
		} else {
			Util.lockView(getActivity(), false, rgC8P844);
			rgC8P844.requestFocus();
		}
	}
}
