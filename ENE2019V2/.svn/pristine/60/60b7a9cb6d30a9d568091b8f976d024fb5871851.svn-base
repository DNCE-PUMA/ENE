package gob.inei.ene2019v2.fragment.ModV;

import gob.inei.dnce.annotations.FieldAnnotation;
import gob.inei.dnce.components.CheckBoxField;
import gob.inei.dnce.components.Entity;
import gob.inei.dnce.components.FragmentForm;
import gob.inei.dnce.components.GridComponent2;
import gob.inei.dnce.components.LabelComponent;
import gob.inei.dnce.components.MasterActivity;
import gob.inei.dnce.components.RadioGroupOtherField;
import gob.inei.dnce.components.RadioGroupOtherField.ORIENTATION;
import gob.inei.dnce.components.TextField;
import gob.inei.dnce.components.ToastMessage;
import gob.inei.dnce.util.Filtros;
import gob.inei.dnce.util.Util;
import gob.inei.ene2019v2.R;
import gob.inei.ene2019v2.common.App;
import gob.inei.ene2019v2.model.Modulov02;
import gob.inei.ene2019v2.service.CuestionarioService;

import java.sql.SQLException;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ScrollView;

public class Mod_V_Fragment_008 extends FragmentForm {

	@FieldAnnotation(orderIndex = 1)
	public CheckBoxField chbC5P523_1;
	@FieldAnnotation(orderIndex = 2)
	public CheckBoxField chbC5P523_2;
	@FieldAnnotation(orderIndex = 3)
	public CheckBoxField chbC5P523_3;
	@FieldAnnotation(orderIndex = 4)
	public CheckBoxField chbC5P523_4;
	@FieldAnnotation(orderIndex = 5)
	public CheckBoxField chbC5P523_5;
	@FieldAnnotation(orderIndex = 6)
	public CheckBoxField chbC5P523_6;
	@FieldAnnotation(orderIndex = 7)
	public TextField txtC5P523_6ESP;
//	@FieldAnnotation(orderIndex = 8)
//	public RadioGroupOtherField rgC5P524;

	private GridComponent2 gcPreg23;

	private CuestionarioService cuestionarioService;
	private Modulov02 bean;
	private LabelComponent lblTitulo, lblsubTitulo, lblDesc;
	LinearLayout q0, q1, q2, q3, q4, q5;

	public Mod_V_Fragment_008() {
	}

	public Mod_V_Fragment_008 parent(MasterActivity parent) {
		this.parent = parent;
		return this;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		rootView = createUI();
		initObjectsWithoutXML(this, rootView);
		enlazarCajas();
		listening();

		return rootView;
	}

	@Override
	protected void buildFields() {
		lblTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
				.text(R.string.CapituloV).textSize(21).centrar().negrita();

		lblsubTitulo = new LabelComponent(this.getActivity(), App.ESTILO)
				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
				.text(R.string.CapV_SecI).textSize(20).centrar().negrita();
//		lblDesc = new LabelComponent(getActivity())
//				.size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
//				.text(R.string.lbl_modv_desc1).textSize(17).centrar().negrita()
//				.colorFondo(R.color.amarillo);

		chbC5P523_1 = new CheckBoxField(this.getActivity(),
				R.string.c1c100m5p023_1, "1:0").size(altoComponente, 600);
		chbC5P523_2 = new CheckBoxField(this.getActivity(),
				R.string.c1c100m5p023_2, "1:0").size(altoComponente, 600);
		chbC5P523_3 = new CheckBoxField(this.getActivity(),
				R.string.c1c100m5p023_3, "1:0").size(altoComponente, 600);
		chbC5P523_4 = new CheckBoxField(this.getActivity(),
				R.string.c1c100m5p023_4, "1:0").size(altoComponente, 600);
		chbC5P523_5 = new CheckBoxField(this.getActivity(),
				R.string.c1c100m5p023_5, "1:0").size(altoComponente, 600);
		chbC5P523_6 = new CheckBoxField(this.getActivity(),
				R.string.c1c100m5p023_6, "1:0").size(altoComponente, 150)
				.callback("FuncionCHECK523");
		txtC5P523_6ESP = new TextField(this.getActivity(), false)
				.size(altoComponente, 450).hint(R.string.especifique)
				.soloTextoNumero();
//		rgC5P524 = new RadioGroupOtherField(this.getActivity(),
//				R.string.c1c100m5p024_1, R.string.c1c100m5p024_2).size(
//				WRAP_CONTENT, 300).orientation(ORIENTATION.HORIZONTAL);

		gcPreg23 = new GridComponent2(this.getActivity(), 2)
				.colorFondo(R.color.transparent);
		gcPreg23.addComponent(chbC5P523_6);
		gcPreg23.addComponent(txtC5P523_6ESP);

		Filtros.setFiltro(txtC5P523_6ESP, Filtros.TIPO.ALFAN_U, 300, null);
	}

	@Override
	protected View createUI() {
		buildFields();

		q0 = createQuestionSection(lblTitulo, lblsubTitulo);
		q1 = createQuestionSection(R.string.c1c100m5p023, chbC5P523_1,
				chbC5P523_2, chbC5P523_3, chbC5P523_4, chbC5P523_5,
				gcPreg23.component());
//		q3 = createQuestionSection(R.string.c1c100m5p024, lblDesc, rgC5P524);

		ScrollView contenedor = createForm();
		LinearLayout form = (LinearLayout) contenedor.getChildAt(0);

		form.addView(q0);
		form.addView(q1);
		//form.addView(q3);

		return contenedor;
	}

	@Override
	public boolean grabar() {

		if (!validar()) {
			if (error) {
				if (!mensaje.equals("")) {
					ToastMessage.msgBox(this.getActivity(), mensaje,
							ToastMessage.MESSAGE_ERROR,
							ToastMessage.DURATION_LONG);
				}
				if (view != null) {
					view.requestFocus();
				}
			}
			return false;
		}
		uiToEntity(bean);
		try {
			if (!getCuestionarioService().saveOrUpdate(bean,
					bean.getSecCap(getListFields(this)))) {
				ToastMessage.msgBox(this.getActivity(),
						"Los datos no se guardaron",
						ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
			}
		} catch (SQLException e) {
			ToastMessage.msgBox(this.getActivity(), e.getMessage(),
					ToastMessage.MESSAGE_INFO, ToastMessage.DURATION_LONG);
			return false;
		}

		return true;
	}

	private boolean validar() {
		String pregunta_no_vacia = getString(R.string.pregunta_no_vacia);
		error = false;

		if (Filtros.getErrorFiltro() != null) {
			ToastMessage.msgBox(getActivity(), Filtros.getErrorFiltro()
					.getValue(), ToastMessage.MESSAGE_ERROR,
					ToastMessage.DURATION_LONG);
			Filtros.getErrorFiltro().getKey().requestFocus();
			return false;
		}

		if (Util.getInt(bean.c5p522) == 1) {
			if (!chbC5P523_1.isChecked() && !chbC5P523_2.isChecked()
					&& !chbC5P523_3.isChecked() && !chbC5P523_4.isChecked()
					&& !chbC5P523_5.isChecked() && !chbC5P523_6.isChecked()) {
				mensaje = "DEBE SELECCIONAR AL MENOS UNA ALTERNATIVA EN P523";
				view = chbC5P523_1;
				return !(error = true);
			}
			
			if (chbC5P523_6.isChecked()) {
				if (Util.esVacio(txtC5P523_6ESP)) {
					mensaje = pregunta_no_vacia.replace("$", "La Preg.523 (Especifique)");
					view = txtC5P523_6ESP;
					error = true;
					return false;
				}else{
					if (txtC5P523_6ESP.getText().length() < 3) {
						mensaje = "Ingrese la información correcta";
						view = txtC5P523_6ESP;
						error = true;
						return false;
					}
				}
			}

		}

//		if (Util.esVacio(rgC5P524)) {
//			mensaje = pregunta_no_vacia.replace("$", "La pregunta P524");
//			view = rgC5P524;
//			error = true;
//			return false;
//		}

		return true;
	}

	@Override
	public void cargarDatos() {
		bean = getCuestionarioService().getModulov02(
				App.getInstance().getEmpresa(),
				new Modulov02().getSecCap(getListFields(this, new String[] {
						"C5P521", "C5P522" })));
		if (bean == null) {
			bean = new Modulov02();
			bean.id = App.getInstance().getEmpresa().id;
		}

		entityToUI(bean);
		inicio();
	}

	private void inicio() {

		if (Util.getInt(bean.c5p521) == 2 || Util.getInt(bean.c5p522) == 2) {
			Util.cleanAndLockView(getActivity(), chbC5P523_1, chbC5P523_2,
					chbC5P523_3, chbC5P523_4, chbC5P523_5, chbC5P523_6,
					txtC5P523_6ESP);
			//rgC5P524.requestFocus();
		} else {
			Util.lockView(getActivity(), false, chbC5P523_1, chbC5P523_2,
					chbC5P523_3, chbC5P523_4, chbC5P523_5, chbC5P523_6);
			FuncionCHECK523();
			chbC5P523_1.requestFocus();
		}

	}

	public void FuncionCHECK523() {
		if (chbC5P523_6.isChecked()) {
			Util.lockView(getActivity(), false, txtC5P523_6ESP);
			txtC5P523_6ESP.requestFocus();
		} else {
			Util.cleanAndLockView(getActivity(), txtC5P523_6ESP);
		}
	}

	public CuestionarioService getCuestionarioService() {
		if (cuestionarioService == null) {
			cuestionarioService = CuestionarioService
					.getInstance(getActivity());
		}
		return cuestionarioService;
	}

	@Override
	public Entity getEntity() {
		return App.getInstance().getEmpresa();
	}
}
