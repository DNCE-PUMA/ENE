package gob.inei.ene2019v2.fragment.ModIV; 

import gob.inei.dnce.annotations.FieldAnnotation;
import gob.inei.dnce.components.FragmentForm;
import gob.inei.dnce.components.CheckBoxField;
import gob.inei.dnce.components.TextField;
import gob.inei.dnce.components.RadioGroupOtherField;
import gob.inei.dnce.components.ToastMessage;
import gob.inei.dnce.components.RadioGroupOtherField.ORIENTATION;
import gob.inei.dnce.components.LabelComponent;
import gob.inei.dnce.components.MasterActivity;
import gob.inei.dnce.util.Filtros;
import gob.inei.dnce.util.Util;
import gob.inei.ene2019v2.R;
import gob.inei.ene2019v2.common.App;
import gob.inei.ene2019v2.model.Caratula;
import gob.inei.ene2019v2.model.Moduloiv02;
import gob.inei.ene2019v2.service.CuestionarioService;

import java.sql.SQLException;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ScrollView;

public class Mod_IV_Fragment_021 extends FragmentForm { 
    
    @FieldAnnotation(orderIndex = 1)
    public CheckBoxField chbM4P071_1;
    @FieldAnnotation(orderIndex = 2)
    public CheckBoxField chbM4P071_2;
    @FieldAnnotation(orderIndex = 3)
    public CheckBoxField chbM4P071_3;
    @FieldAnnotation(orderIndex = 4)
    public CheckBoxField chbM4P071_4;
    @FieldAnnotation(orderIndex = 5)
    public CheckBoxField chbM4P071_5;
    @FieldAnnotation(orderIndex = 6)
    public CheckBoxField chbM4P071_6;
    @FieldAnnotation(orderIndex = 7)
    public TextField txtM4P071_6ESP;
    @FieldAnnotation(orderIndex = 8)
    public RadioGroupOtherField rgM4P072;
    @FieldAnnotation(orderIndex = 9)
    public RadioGroupOtherField rgM4P073;
    @FieldAnnotation(orderIndex = 10)
    public TextField txtM4P073_ESP;
    @FieldAnnotation(orderIndex = 11)
    public RadioGroupOtherField rgM4P074;
    
    private CuestionarioService cuestionarioService;
    private Moduloiv02 bean;
	private LabelComponent lblTitulo;
	
    public Mod_IV_Fragment_021() {} 
    
    public Mod_IV_Fragment_021 parent(MasterActivity parent) {
    	this.parent = parent;
    	return this;
    } 
    
    @Override 
    public void onCreate(Bundle savedInstanceState) { 
		super.onCreate(savedInstanceState); 
    } 
    
    @Override 
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) { 
    	rootView = createUI(); 
		initObjectsWithoutXML(this, rootView);
		enlazarCajas();
		listening();
		
		return rootView;
    } 
    
    @Override 
    protected void buildFields() { 
    	lblTitulo=new LabelComponent(this.getActivity(), App.ESTILO).size(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)
    			.text(R.string.c1c100m4p).textSize(21).centrar().negrita();
    	
		chbM4P071_1 = new CheckBoxField(this.getActivity(), R.string.c1c100m4p071_1, "1:0");
		chbM4P071_2 = new CheckBoxField(this.getActivity(), R.string.c1c100m4p071_2, "1:0");
		chbM4P071_3 = new CheckBoxField(this.getActivity(), R.string.c1c100m4p071_3, "1:0");
		chbM4P071_4 = new CheckBoxField(this.getActivity(), R.string.c1c100m4p071_4, "1:0");
		chbM4P071_5 = new CheckBoxField(this.getActivity(), R.string.c1c100m4p071_5, "1:0");
		chbM4P071_6 = new CheckBoxField(this.getActivity(), R.string.c1c100m4p071_6, "1:0");
		txtM4P071_6ESP = new TextField(this.getActivity(), false).size(altoComponente, 450);
		rgM4P072 = new RadioGroupOtherField(this.getActivity(),
				R.string.c1c100m4p072_1, R.string.c1c100m4p072_2).size(
				WRAP_CONTENT, 600).orientation(ORIENTATION.VERTICAL);
		rgM4P073 = new RadioGroupOtherField(this.getActivity(),
				R.string.c1c100m4p073_1, R.string.c1c100m4p073_2,
				R.string.c1c100m4p073_3, R.string.c1c100m4p073_4,
				R.string.c1c100m4p073_5).size(WRAP_CONTENT, 600).orientation(
				ORIENTATION.VERTICAL);
		txtM4P073_ESP = new TextField(this.getActivity(), false).size(
				altoComponente, 450);
		rgM4P074 = new RadioGroupOtherField(this.getActivity(),
				R.string.c1c100m4p074_1, R.string.c1c100m4p074_2).size(
				WRAP_CONTENT, 600).orientation(ORIENTATION.VERTICAL);

		Filtros.setFiltro(txtM4P071_6ESP, Filtros.TIPO.ALFAN_U,300,null);
		Filtros.setFiltro(txtM4P073_ESP, Filtros.TIPO.ALFAN_U,300,null);
    } 
	
    @Override 
    protected View createUI() { 
		buildFields(); 
		/*Aca creamos las preguntas*/

		LinearLayout q0 = createQuestionSection(lblTitulo);
		
		LinearLayout q1 = createQuestionSection(R.string.c1c100m4p071_1, chbM4P071_1);
		LinearLayout q2 = createQuestionSection(R.string.c1c100m4p071_2, chbM4P071_2);
		LinearLayout q3 = createQuestionSection(R.string.c1c100m4p071_3, chbM4P071_3);
		LinearLayout q4 = createQuestionSection(R.string.c1c100m4p071_4, chbM4P071_4);
		LinearLayout q5 = createQuestionSection(R.string.c1c100m4p071_5, chbM4P071_5);
		LinearLayout q6 = createQuestionSection(R.string.c1c100m4p071_6, chbM4P071_6);
		LinearLayout q7 = createQuestionSection(R.string.c1c100m4p071_6esp, txtM4P071_6ESP);
		LinearLayout q8 = createQuestionSection(R.string.c1c100m4p072, rgM4P072);
		LinearLayout q9 = createQuestionSection(R.string.c1c100m4p073, rgM4P073);
		LinearLayout q10 = createQuestionSection(R.string.c1c100m4p073_esp, txtM4P073_ESP);
		LinearLayout q11 = createQuestionSection(R.string.c1c100m4p074, rgM4P074);

		///////////////////////////// 
		ScrollView contenedor = createForm(); 
		LinearLayout form = (LinearLayout) contenedor.getChildAt(0); 
		/*Aca agregamos las preguntas a la pantalla*/ 
		form.addView(q0); 
		
		form.addView(q1);
		form.addView(q2);
		form.addView(q3);
		form.addView(q4);
		form.addView(q5);
		form.addView(q6);
		form.addView(q7);
		form.addView(q8);
		form.addView(q9);
		form.addView(q10);
		form.addView(q11);
		
    return contenedor; 
    } 
    
    @Override 
    public boolean grabar() {
    	uiToEntity(bean);
		if (!validar()) {
			if (error) {
				if (!mensaje.equals("")) {
					ToastMessage.msgBox(this.getActivity(), mensaje,
							ToastMessage.MESSAGE_ERROR,
							ToastMessage.DURATION_LONG);
				}
				if (view != null) {
					view.requestFocus();
				}
			}
			return false;
		}
		
		try {
			if(!getCuestionarioService().saveOrUpdate(bean, bean.getSecCap(getListFields(this)))){
				ToastMessage.msgBox(this.getActivity(), "Los datos no se guardaron",
						ToastMessage.MESSAGE_ERROR,
						ToastMessage.DURATION_LONG);
			}
		} catch (SQLException e) {
			ToastMessage.msgBox(this.getActivity(), e.getMessage(),
					ToastMessage.MESSAGE_INFO, ToastMessage.DURATION_LONG);
			return false;
		}
		
		return true; 
    } 

    private boolean validar() { 
    	String pregunta_no_vacia = getString(R.string.pregunta_no_vacia);
    	String especifique_no_vacio = getString(R.string.pregunta_especifique);
    	error = false;

    	if(Filtros.getErrorFiltro()!=null){
            ToastMessage.msgBox(getActivity(), Filtros.getErrorFiltro().getValue(),
                         ToastMessage.MESSAGE_ERROR, ToastMessage.DURATION_LONG);
            Filtros.getErrorFiltro().getKey().requestFocus();
            return false;
		}
    	
    	/*if(Util.esVacio(rgP10_5)){
    		mensaje = pregunta_no_vacia.replace("$", "Material de la Conexi\u00f3n;");
    		view = rgP10_5;
    		return !(error = true);
    	}
    	if(rgP10_5.isTagSelected(4) && Util.esVacio(txtP10_5_O)){
    		mensaje = especifique_no_vacio;
    		view = txtP10_5_O;
    		return !(error = true);
    	}
    	if(Util.esVacio(rgP10_6)){
    		mensaje = pregunta_no_vacia.replace("$", "Di\u00e1metro de Conexi\u00f3n;");
    		view = rgP10_6;
    		return !(error = true);
    	}
    	if(rgP10_6.isTagSelected(10) && Util.esVacio(txtP10_6_O)){
    		mensaje = especifique_no_vacio;
    		view = txtP10_6_O;
    		return !(error = true);
    	}
    	if(Util.esVacio(rgP10_7)){
    		mensaje = pregunta_no_vacia.replace("$", "LLaves de paso;");
    		view = rgP10_7;
    		return !(error = true);
    	}*/

		return true; 
    } 
     
    @Override 
    public void cargarDatos() { 
    	bean = getCuestionarioService().getModuloiv02(App.getInstance().getEmpresa(), 
    			new Moduloiv02().getSecCap(getListFields(this)));
    	if (bean == null) {
    		bean = new Moduloiv02();
		}
    	bean.id = App.getInstance().getEmpresa().id;
    	entityToUI(bean);
		inicio(); 
    } 
    
    private void inicio() {    	
    	//rgP10_5.requestFocus();
    }

    public CuestionarioService getCuestionarioService() {
		if (cuestionarioService == null) {
			cuestionarioService = CuestionarioService
					.getInstance(getActivity());
		}
		return cuestionarioService;
	}
    
    @Override
	public Caratula getEntity() {
		return App.getInstance().getEmpresa();
	}
} 
